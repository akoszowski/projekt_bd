[{"/home/james/git/projekt_bd/client/src/index.js":"1","/home/james/git/projekt_bd/client/src/App.js":"2","/home/james/git/projekt_bd/client/src/reportWebVitals.js":"3","/home/james/git/projekt_bd/client/src/Pools.js":"4","/home/james/git/projekt_bd/client/src/Login.js":"5","/home/james/git/projekt_bd/client/src/Timetable.js":"6","/home/james/git/projekt_bd/client/src/state-manager.js":"7","/home/james/git/projekt_bd/client/src/cookie-manager.js":"8","/home/james/git/projekt_bd/client/src/helpers.js":"9","/home/james/git/projekt_bd/client/src/icons.js":"10","/home/james/git/projekt_bd/client/src/Dashboard.js":"11"},{"size":500,"mtime":1613004175842,"results":"12","hashOfConfig":"13"},{"size":2702,"mtime":1613121611380,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1612891294721,"results":"15","hashOfConfig":"13"},{"size":1602,"mtime":1613083880503,"results":"16","hashOfConfig":"13"},{"size":6748,"mtime":1613099163492,"results":"17","hashOfConfig":"13"},{"size":6053,"mtime":1613098981281,"results":"18","hashOfConfig":"13"},{"size":437,"mtime":1613121572503,"results":"19","hashOfConfig":"13"},{"size":88,"mtime":1613010104016,"results":"20","hashOfConfig":"13"},{"size":72,"mtime":1613007865880,"results":"21","hashOfConfig":"13"},{"size":752,"mtime":1613095873307,"results":"22","hashOfConfig":"13"},{"size":1857,"mtime":1613121926016,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1jrpkrv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"/home/james/git/projekt_bd/client/src/index.js",[],["52","53"],"/home/james/git/projekt_bd/client/src/App.js",["54","55","56","57","58"],"import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Login from './Login';\nimport Pools from './Pools';\nimport Timetable from './Timetable';\nimport Dashboard from './Dashboard';\nimport {listen} from './state-manager'\nimport {cookies} from './cookie-manager'\nimport {isDefined} from './helpers'\nimport axios from 'axios'\n\nclass App extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            page: \"pools\",\n            response: {body: \"\"},\n        };\n    }\n\n    componentDidMount() {\n        this.receiveStateChange({});\n        axios.get('/api/v1/say-something').then((res) => {\n            const response = res.data;\n            console.log(res);\n            console.log(response);\n            this.setState({response});\n        });\n    }\n\n    componentWillMount() {\n        this.receiveStateChange = this.receiveStateChange.bind(this);\n        listen(\"changeState\", this.receiveStateChange);\n        this.logout = this.logout.bind(this);\n        listen(\"logout\", this.logout);\n    }\n\n    receiveStateChange(payload) {\n        if(!isDefined(cookies.get(\"token\")))\n            payload.page = \"login\";\n        this.setState(payload);\n    }\n\n    currentPage() {\n        switch (this.state.page) {\n            case \"login\":\n                return <Login/>;\n                break;\n            case \"pools\":\n                return <Pools/>;\n                break;\n            case \"timetable\":\n                return <Timetable selectedPool={this.state.selectedPool}/>;\n                break;\n            case \"dashboard\":\n                return <Dashboard/>;\n                break;\n            case \"end\":\n                return <div>\n                    <h1>Reservation successful!</h1>\n                    <button onClick={(e) => this.receiveStateChange({page: \"dashboard\"})}>Dashboard</button>\n                </div>;\n                break;\n            default:\n                return <h1>404</h1>\n        }\n    }\n\n    logout(payload={}) {\n        cookies.remove('token');\n        this.receiveStateChange({});\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>HELLO from the frontend!</h1>\n                <button onClick={(e) => this.logout()}>Logout</button>\n                <button onClick={(e) => this.receiveStateChange({page: \"pools\"})}>Make a reservation</button>\n                <button onClick={(e) => this.receiveStateChange({page: \"dashboard\"})}>List reservations</button>\n                <h1>{this.state.response.body}</h1>\n                {this.state.page}\n                {this.currentPage()}\n            </div>\n        );\n    }\n}\n\nexport default App;","/home/james/git/projekt_bd/client/src/reportWebVitals.js",[],"/home/james/git/projekt_bd/client/src/Pools.js",[],"/home/james/git/projekt_bd/client/src/Login.js",["59"],"import React, {Component} from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tabs\";\nimport './Login.css';\nimport axios from 'axios'\nimport sha1 from 'sha1'\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\nimport {cookies} from './cookie-manager'\nimport {changeRootState} from './state-manager'\nimport {isDefined} from './helpers'\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            tel: \"\",\n            level: \"\",\n            errorMsg: \"\"\n        };\n    }\n\n    validateLogin() {\n        return this.state.email.length > 0 && this.state.password.length > 0;\n    }\n\n    validateRegister() {\n        return this.state.email.length > 0 && this.state.password.length > 0 && isDefined(this.state.tel) && this.state.tel.length > 0 && this.state.level.length > 0 && this.state.level != \"Wybierz\";\n    }\n\n    error(){\n        this.setState({errorMsg: \"Error\", password: \"\"});\n    }\n\n    resetError(){\n        this.setState({errorMsg:\"\"});\n    }\n\n    componentWillMount(){\n        this.error = this.error.bind(this);\n        this.resetError = this.resetError.bind(this);\n    }\n\n    handleLogin(event) {\n        event.preventDefault();\n        axios.post(\"/api/v1/login\", {\n            email: this.state.email,\n            password: sha1(this.state.password)\n        }).then((response) => {\n            console.log(\"Success!\");\n            cookies.set('token', '123456789', {path: '/'});\n            changeRootState({page: \"dashboard\"});\n            console.log(response);\n        }).catch(function (error) {\n            console.log(\"Error!\");\n            console.log(error);\n            this.error();\n        });\n    }\n\n    handleRegister(event) {\n        event.preventDefault();\n        axios.post(\"/api/v1/register\", {\n            email: this.state.email,\n            password: sha1(this.state.password),\n            tel: this.state.tel,\n            level: this.state.level\n        }).then((response) => {\n            console.log(\"Success!\");\n            cookies.set('token', '123456789', {path: '/'});\n            changeRootState({page: \"dashboard\"});\n            console.log(response);\n        }).catch((error) => {\n            console.log(\"Error!\");\n            console.log(error);\n            this.error();\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Login\">\n                <Tabs onSelect={this.resetError} >\n                    <Tab eventKey=\"Login\" title=\"Login\" onClick={this.resetError}>\n                        <div className=\"error\"> {this.state.errorMsg}</div>\n                        <Form onSubmit={(e) => this.handleLogin(e)}>\n                            <Form.Group size=\"lg\" controlId=\"email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control\n                                    autoFocus\n                                    type=\"email\"\n                                    value={this.email}\n                                    onChange={(e) => this.setState({email: e.target.value})}\n                                />\n                            </Form.Group>\n                            <Form.Group size=\"lg\" controlId=\"password\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control\n                                    type=\"password\"\n                                    value={this.password}\n                                    onChange={(e) => this.setState({password: e.target.value})}\n                                />\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\" disabled={!this.validateLogin()}>\n                                Login\n                            </Button>\n                        </Form>\n                    </Tab>\n                    <Tab eventKey=\"Register\" title=\"Register\" onClick={this.resetError}>\n                        <div className=\"error\"> {this.state.errorMsg}</div>\n                        <Form onSubmit={(e) => this.handleRegister(e)}>\n                            <Form.Group size=\"lg\" controlId=\"email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control\n                                    autoFocus\n                                    type=\"email\"\n                                    value={this.email}\n                                    onChange={(e) => this.setState({email: e.target.value})}\n                                />\n                            </Form.Group>\n                            <Form.Group size=\"lg\" controlId=\"password\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control\n                                    type=\"password\"\n                                    value={this.state.password}\n                                    onChange={(e) => this.setState({password: e.target.value})}\n                                />\n                            </Form.Group>\n                            <Form.Group controlId=\"tel\">\n                                <PhoneInput\n                                    placeholder=\"Wprowadź nr telefonu\"\n                                    defaultCountry=\"PL\"\n                                    value={this.state.tel}\n                                    onChange={(e) => {\n                                        this.setState({tel: e})\n                                    }}/>\n                            </Form.Group>\n                            <Form.Group controlId=\"level\">\n                                <Form.Label>Poziom zaawansowania</Form.Label>\n                                <Form.Control as=\"select\" defaultValue=\"Wybierz\"\n                                              onChange={(e) => this.setState({level: e.target.value})}>\n                                    <option>Wybierz</option>\n                                    <option>początkujący</option>\n                                    <option>średniozaawansowany</option>\n                                    <option>zaawansowany</option>\n                                </Form.Control>\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\" disabled={!this.validateRegister()}>\n                                Register\n                            </Button>\n                        </Form>\n                    </Tab>\n                </Tabs>\n            </div>\n        );\n    }\n}\n\nexport default Login;","/home/james/git/projekt_bd/client/src/Timetable.js",["60","61","62","63","64","65"],"import React, {Component} from 'react';\nimport './Timetable.css';\nimport axios from 'axios'\nimport {isDefined} from './helpers'\nimport {changeRootState} from './state-manager'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Prev, Next} from './icons'\n\nclass Timetable extends Component {\n\n    resetSelection() {\n        this.setState({\n            selectedRow: undefined,\n            selectedColumnStart: undefined,\n            selectedColumnStop: undefined\n        });\n    }\n\n    constructor(props) {\n        super();\n        let now = new Date();\n        this.state = {\n            time: new Date(now.getFullYear(), now.getMonth(), now.getDate()),\n            headers: [\"6:00\", \"6:15\", \"6:30\", \"6:45\", \"7:00\", \"7:15\", \"6:00\", \"6:15\", \"6:30\", \"6:45\", \"7:00\", \"7:15\", \"6:00\", \"6:15\", \"6:30\", \"6:45\", \"7:00\", \"7:15\", \"6:00\", \"6:15\", \"6:30\", \"6:45\", \"7:00\", \"7:15\", \"6:00\", \"6:15\", \"6:30\", \"6:45\", \"7:00\", \"7:15\", \"6:00\", \"6:15\", \"6:30\", \"6:45\", \"7:00\", \"7:15\", \"6:00\", \"6:15\", \"6:30\", \"6:45\", \"7:00\", \"7:15\", \"6:00\", \"6:15\", \"6:30\", \"6:45\", \"7:00\", \"7:15\", \"6:00\", \"6:15\", \"6:30\", \"6:45\", \"7:00\", \"7:15\", \"6:00\", \"6:15\", \"6:30\", \"6:45\", \"7:00\", \"7:15\"],\n            //headers: [\"6:00\", \"6:15\", \"6:30\", \"6:45\", \"7:00\", \"7:15\"],\n            data: [\n                [1, 2, 3, 4, 5, 6],\n                [7, 8, 9, 10, 11, 12]\n            ],\n            selectedRow: undefined,\n            selectedColumnStart: undefined,\n            selectedColumnStop: undefined\n        }\n        this.selectedPool = props.selectedPool;\n    }\n\n\n    componentDidMount() {\n        axios.get('/api/v1//pools').then((res) => {\n            const data = res.data;\n            this.setState(data);\n        });\n    }\n\n    getClicked(rowIndex, columnIndex) {\n        let result = isDefined(rowIndex) && (rowIndex == this.state.selectedRow) && (this.state.selectedColumnStart <= columnIndex) && (columnIndex <= this.state.selectedColumnStop);\n        console.log(result);\n        return result;\n    }\n\n    makeReservation() {\n        axios.post('/api/v1/reserve', {\n            selectedPool: this.selectedPool,\n            selectedRow: this.state.selectedRow,\n            date: this.state.time,\n            start: this.state.headers[this.state.selectedColumnStart],\n            stop: this.state.headers[this.state.selectedColumnStop]\n        }).then((response) => {\n            console.log(\"Success!\");\n            changeRootState({page: \"end\"});\n            console.log(response);\n        }).catch(function (error) {\n            console.log(\"Error!\");\n            console.log(error);\n        });\n    }\n\n\n    toggle(rowIndex, columnIndex) {\n        let left = this.getClicked(rowIndex, columnIndex - 1);\n        let middle = this.getClicked(rowIndex, columnIndex);\n        let right = this.getClicked(rowIndex, columnIndex + 1);\n\n\n        if (!isDefined(this.state.selectedRow) || (!middle && (left || right)) || (middle && (!left || !right))) {\n            console.log(\"Toggling\", rowIndex, columnIndex);\n            this.setState((prevState) => {\n                    let copy = Object.assign({}, prevState);\n                    copy.selectedRow = rowIndex;\n                    console.log(copy)\n                    console.log(\"def\", isDefined(copy.selectedColumnStart))\n                    if (middle) {\n                        if (copy.selectedColumnStart == copy.selectedColumnStop)\n                            this.resetSelection();\n                        else {\n                            if (copy.selectedColumnStart == columnIndex)\n                                copy.selectedColumnStart++;\n                            if (copy.selectedColumnStop == columnIndex)\n                                copy.selectedColumnStop--;\n                        }\n                    } else {\n                        if (!isDefined(copy.selectedColumnStart) || columnIndex < copy.selectedColumnStart)\n                            copy.selectedColumnStart = columnIndex;\n                        if (!isDefined(copy.selectedColumnStop) || copy.selectedColumnStop < columnIndex)\n                            copy.selectedColumnStop = columnIndex;\n                    }\n                    return copy;\n                }\n            );\n        }\n    }\n\n    changeTime(numOfDays) {\n        let newDate = (this.state.time.getDate()) + numOfDays;\n        console.log(newDate);\n        this.setState((prevState) => {\n            let copy = Object.assign({}, prevState);\n            copy.time.setDate(newDate);\n            return copy;\n        })\n        this.resetSelection();\n    }\n\n\n    render() {\n        return <div class=\"zero\">\n            <h1>Selected pool: {this.selectedPool} </h1>\n            <div class=\"flipper zero\">\n            <div class=\"div zero\">\n                <div class=\"flipper zero inline\">\n                <Table bordered size=\"sm\" class=\"timetable table-responsive zero inline\">\n                    <thead>\n\n                        <tr>\n                            {this.state.headers.map((hour) =>\n                                <td class=\"header\">{hour}</td>\n                            )}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.data.map((row, rowIndex) =>\n                            <tr>\n                                {row.map((n, columnIndex) => {\n                                    let clicked = this.getClicked(rowIndex, columnIndex);\n                                    return <td class={(clicked ? \"selected\" : \"free\") + \" data\"}\n                                               onClick={(e) => this.toggle(rowIndex, columnIndex)}>{n}</td>;\n                                })}\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </div>\n                </div>\n                </div>\n            <Button onClick={(e) => this.makeReservation()}>Reserve</Button>\n        </div>\n    }\n\n\n}\n\nexport default Timetable;","/home/james/git/projekt_bd/client/src/state-manager.js",["66"],"\nconst rootMessenger = new EventTarget();\n\nconst send = (type,payload={}) => {\n    let event = new CustomEvent(type,{detail: payload});\n    rootMessenger.dispatchEvent(event);\n}\n\nconst listen = (type,listener) => {\n    rootMessenger.addEventListener(type,(e)=>listener(e.detail));\n}\n\nconst changeRootState = (payload) => send(\"changeState\",payload);\n\nconst logout = ()=>send(\"logout\",{detail:{}});\n\nexport {send,changeRootState, listen};","/home/james/git/projekt_bd/client/src/cookie-manager.js",[],"/home/james/git/projekt_bd/client/src/helpers.js",[],"/home/james/git/projekt_bd/client/src/icons.js",[],"/home/james/git/projekt_bd/client/src/Dashboard.js",["67"],"import React, {Component} from 'react';\nimport './Dashboard.css';\nimport axios from 'axios'\nimport {changeRootState, send} from './state-manager'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Dashboard extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            response: {rows: []},\n        };\n    }\n\n\n    componentDidMount() {\n        // axios.get('/api/v1/list').then((res) => {\n        //     const data = res.data;\n        //     this.setState({response: data});\n        // });\n    }\n\n    render() {\n        return <div className=\"dashboard\">\n\n            <Table bordered className=\"dashboardTable\">\n                <thead>\n                    <tr>\n                        <th className=\"id\">Id</th>\n                        <th className=\"name\">Nazwa</th>\n                        <th className=\"address\">Adres</th>\n                    </tr>\n                </thead>\n                {this.state.response.rows.map((row, rowIndex) => {\n                        return <tbody>\n                            <tr className=\"poolsRow\" onClick={(e)=>this.selectPool(rowIndex)}>\n                                <td className=\"id\">{row[0]}</td>\n                                <td className=\"name\"> {row[1]}</td>\n                                <td className=\"address\">{row[2]}</td>\n                            </tr>\n                        </tbody>;\n                    }\n                )}\n            </Table>\n            <div className=\"buttons\">\n            <Button className=\"newButton\" onClick={(e)=>changeRootState({page: \"pools\"})}>New reservation</Button>\n            <Button className=\"newButton\" onClick={(e)=>send(\"logout\",{detail:e})}>Logout</Button>\n                </div>\n        </div>;\n    }\n}\n\nexport default Dashboard;",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":50,"column":17,"nodeType":"74","messageId":"75","endLine":50,"endColumn":23},{"ruleId":"72","severity":1,"message":"73","line":53,"column":17,"nodeType":"74","messageId":"75","endLine":53,"endColumn":23},{"ruleId":"72","severity":1,"message":"73","line":56,"column":17,"nodeType":"74","messageId":"75","endLine":56,"endColumn":23},{"ruleId":"72","severity":1,"message":"73","line":59,"column":17,"nodeType":"74","messageId":"75","endLine":59,"endColumn":23},{"ruleId":"72","severity":1,"message":"73","line":65,"column":17,"nodeType":"74","messageId":"75","endLine":65,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":33,"column":187,"nodeType":"78","messageId":"79","endLine":33,"endColumn":189},{"ruleId":"80","severity":1,"message":"81","line":9,"column":9,"nodeType":"82","messageId":"83","endLine":9,"endColumn":13},{"ruleId":"80","severity":1,"message":"84","line":9,"column":15,"nodeType":"82","messageId":"83","endLine":9,"endColumn":19},{"ruleId":"76","severity":1,"message":"85","line":48,"column":55,"nodeType":"78","messageId":"79","endLine":48,"endColumn":57},{"ruleId":"76","severity":1,"message":"85","line":85,"column":54,"nodeType":"78","messageId":"79","endLine":85,"endColumn":56},{"ruleId":"76","severity":1,"message":"85","line":88,"column":58,"nodeType":"78","messageId":"79","endLine":88,"endColumn":60},{"ruleId":"76","severity":1,"message":"85","line":90,"column":57,"nodeType":"78","messageId":"79","endLine":90,"endColumn":59},{"ruleId":"80","severity":1,"message":"86","line":15,"column":7,"nodeType":"82","messageId":"83","endLine":15,"endColumn":13},{"ruleId":"80","severity":1,"message":"87","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":13},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'Prev' is defined but never used.","Identifier","unusedVar","'Next' is defined but never used.","Expected '===' and instead saw '=='.","'logout' is assigned a value but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]